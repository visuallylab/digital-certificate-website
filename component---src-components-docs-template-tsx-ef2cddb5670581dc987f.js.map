{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/DocsTemplate.tsx"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","Content","styled","Col","Sidebar","A","Link","PaginationButton","query","PageTemplate","data","edges","allMdx","indexData","filter","edge","node","fields","slug","frontmatter","title","map","currentEdge","find","id","previousNode","previous","undefined","nextNode","next","fluid","xs","sm","placeholder","index","to","body"],"mappings":"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","file":"component---src-components-docs-template-tsx-ef2cddb5670581dc987f.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Layout from './Layout';\nimport Head from './Head';\nimport Nav from './Nav';\nimport styled from 'styled-components';\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid';\n\nconst Content = styled(Col)`\n  overflow: hidden;\n  padding: 64px 32px;\n`;\n\nconst Sidebar = styled(Col)`\n  padding: 24px 12px;\n`;\n\nconst A = styled(Link)`\n  display: block;\n  font-size: 16px;\n  margin-bottom: 12px;\n`;\n\nconst PaginationButton = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 16px;\n  border: 1px solid grey;\n  box-sizing: border-box;\n  padding: 12px;\n  margin-top: 12px;\n  display: inline-block;\n  margin-right: 12px;\n  transition: 0.2s;\n  &:hover {\n    background-color: silver;\n  }\n`;\n\nconst PageTemplate: React.FC<{ data: DocQuery }> = ({\n  data: { mdx, allMdx },\n}) => {\n  const edges = allMdx.edges || [];\n  const indexData = edges\n    .filter(\n      edge =>\n        edge.node.fields &&\n        edge.node.fields.slug &&\n        edge.node.frontmatter &&\n        edge.node.frontmatter.title,\n    )\n    .map(edge => ({\n      slug: edge.node!.fields!.slug!,\n      title: edge.node.frontmatter!.title!,\n    }));\n\n  const currentEdge = edges.find(edge => edge.node.id === mdx?.id);\n  const previousNode =\n    currentEdge &&\n    currentEdge.previous &&\n    currentEdge.previous.fields &&\n    currentEdge.previous.fields.slug &&\n    currentEdge.previous.frontmatter &&\n    currentEdge.previous.frontmatter.title\n      ? currentEdge.previous\n      : undefined;\n  const nextNode =\n    currentEdge &&\n    currentEdge.next &&\n    currentEdge.next.fields &&\n    currentEdge.next.fields.slug &&\n    currentEdge.next.frontmatter &&\n    currentEdge.next.frontmatter.title\n      ? currentEdge.next\n      : undefined;\n\n  return (\n    <Layout>\n      <Head />\n      <Nav />\n      <Grid fluid>\n        <Row>\n          <Sidebar xs={false} sm={2}>\n            <input placeholder=\"搜尋任何文字...\" />\n            <h3>文件列表</h3>\n            {indexData.map(index => (\n              <A key={index.slug} to={index.slug}>\n                {index.title}\n              </A>\n            ))}\n          </Sidebar>\n          <Content xs={12} sm={10}>\n            {mdx?.body && <MDXRenderer>{mdx?.body}</MDXRenderer>}\n            {previousNode && (\n              <PaginationButton to={previousNode.fields!.slug!}>\n                上一章：{previousNode.frontmatter!.title!}\n              </PaginationButton>\n            )}\n            {nextNode && (\n              <PaginationButton to={nextNode.fields!.slug!}>\n                下一章：{nextNode.frontmatter!.title!}\n              </PaginationButton>\n            )}\n          </Content>\n        </Row>\n      </Grid>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query Doc($id: String) {\n    allMdx(sort: { order: ASC, fields: frontmatter___index }) {\n      edges {\n        previous {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n        next {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"sourceRoot":""}